library(ggplot2)
vesperal=NULL
mantinal=NULL
mu.SBP=120
sigma.SBP=5
mu.DBP=80
sigma.DBP=5
m=8
SBP<-c(rnorm(44, mean=mu.SBP,sigma.SBP),
rnorm(24, mean=100,5),
rnorm(12, mean=mu.SBP,sigma.SBP))
DBP<-c(rnorm(44, mu.DBP,sigma.DBP),
rnorm(24, mean=70,5),
rnorm(12, mu.DBP,sigma.DBP))
Zaman<-as.factor(c(rep(c("gunduz"), 44),
rep(c("gece"), 24),
rep(c("gunduz"), 12)))
Train<-data.frame(SBP,DBP, Zaman)
ggplot(Train, aes(y=SBP, x=1:length(Train[,1])))+
geom_line()+
geom_smooth()
ggplot(Train, aes(y=DBP, x=1:length(Train[,1])))+
geom_line()+
geom_smooth()
vesperal=NULL
mantinal=NULL
mu.SBP=120
sigma.SBP=5
mu.DBP=80
sigma.DBP=5
m=8
SBP<-c(rnorm(44, mean=mu.SBP,sigma.SBP),
rnorm(24, mean=100,5),
rnorm(8, mean=mu.SBP,sigma.SBP),
rnorm(4, mean=mu.SBP+50,sigma.SBP))
DBP<-c(rnorm(44, mu.DBP,sigma.DBP),
rnorm(24, mean=70,5),
rnorm(8, mu.DBP,sigma.DBP),
rnorm(4, mu.DBP+50,sigma.DBP))
Zaman<-as.factor(c(rep(c("gunduz"), 44),
rep(c("gece"), 24),
rep(c("gunduz"), 12)))
Test<-data.frame(SBP,DBP, Zaman)
ggplot(Test, aes(y=SBP, x=1:length(Test[,1])))+
geom_line()+
geom_smooth()
ggplot(Test, aes(y=DBP, x=1:length(Test[,1])))+
geom_line()+
geom_smooth()
View(Test)
View(Test)
########Control limits#############################
library(caret)
library(boot)
library(dplyr)
library(ggplot2)
library(MASS) #mvnrnd
library(pdp)
S0<-sample_n(Train, length(Train[,1])) #bilinen ve normal(hipertansiyon olmayan) veriler
RESPONSE<-"NORMAL"
S0<-cbind(S0,RESPONSE)
N0<-length(S0[,1])
Nw<-4
p0<-c()
p1<-c()
SW<-c() #pencere icinde kalan veriler
Data.model<-c()
Predict<-c()
nTrees<-c()
for (i in Nw:length(Train[,1])) {
SW<-Test[(i-Nw+1):i,]
RESPONSE<-"HIPERTANSIF"
SW<-cbind(SW,RESPONSE)
Data.model<-rbind(S0,SW)
rownames(Data.model)<-1:(N0+Nw)
Data.model<-Data.model[,-1]
fitControl <- trainControl(classProbs = T, method = "oob")
fit <- train(as.factor(RESPONSE) ~ .,
data = Data.model,
method="rf",
trainControl=fitControl)
Predict<-predict(fit, type='prob', OOB=TRUE)
#nTrees[i]<-fit$finalModel$ntree
p1[i]<-sum(Predict[(N0+1):(N0+Nw),2])/Nw
}
n = length(Predict[,2])/2
B = 10000
result = rep(NA, B)
for (i in 1:B) {
boot.sample = sample(n, replace = TRUE)
result[i] = quantile(p1[boot.sample],0.995,na.rm = T)
}
CL<-mean(result)
library(caret)
library(boot)
library(dplyr)
library(ggplot2)
library(MASS) #mvnrnd
library(pdp)
S0<-sample_n(Train, length(Train[,1])) #bilinen ve normal(hipertansiyon olmayan) veriler
RESPONSE<-"NORMAL"
S0<-cbind(S0,RESPONSE)
N0<-length(S0[,1])
Nw<-4
p0<-c()
p1<-c()
SW<-c() #pencere icinde kalan veriler
Data.model<-c()
Predict<-c()
nTrees<-c()
for (i in Nw:length(Test[,1])) {
SW<-Test[(i-Nw+1):i,]
RESPONSE<-"HIPERTANSIF"
SW<-cbind(SW,RESPONSE)
Data.model<-rbind(S0,SW)
rownames(Data.model)<-1:(N0+Nw)
Data.model<-Data.model[,-1]
fitControl <- trainControl(classProbs = T, method = "oob")
fit <- train(as.factor(RESPONSE) ~ .,
data = Data.model,
method="rf",
trainControl=fitControl)
Predict<-predict(fit, type='prob', OOB=TRUE)
#nTrees[i]<-fit$finalModel$ntree
p1[i]<-sum(Predict[(N0+1):(N0+Nw),2])/Nw
}
sonuclar<-data.frame(p1, CL)
ggplot(sonuclar, aes(y=p1, x=1:length(sonuclar[,1])))+
geom_line()+
geom_hline(yintercept =CL)
View(p1)
vesperal=NULL
mantinal=NULL
mu.SBP=130
sigma.SBP=5
mu.DBP=80
sigma.DBP=5
m=8
SBP<-c(rnorm(44, mean=mu.SBP,sigma.SBP),
rnorm(24, mean=100,5),
rnorm(8, mean=mu.SBP,sigma.SBP),
rnorm(4, mean=mu.SBP+50,sigma.SBP))
DBP<-c(rnorm(44, mu.DBP,sigma.DBP),
rnorm(24, mean=70,5),
rnorm(8, mu.DBP,sigma.DBP),
rnorm(4, mu.DBP+50,sigma.DBP))
Zaman<-as.factor(c(rep(c("gunduz"), 44),
rep(c("gece"), 24),
rep(c("gunduz"), 12)))
Test<-data.frame(SBP,DBP, Zaman)
ggplot(Test, aes(y=SBP, x=1:length(Test[,1])))+
geom_line()+
geom_smooth()
ggplot(Test, aes(y=DBP, x=1:length(Test[,1])))+
geom_line()+
geom_smooth()
S0<-sample_n(Train, length(Train[,1])) #bilinen ve normal(hipertansiyon olmayan) veriler
RESPONSE<-"NORMAL"
S0<-cbind(S0,RESPONSE)
N0<-length(S0[,1])
Nw<-4
p0<-c()
p1<-c()
SW<-c() #pencere icinde kalan veriler
Data.model<-c()
Predict<-c()
nTrees<-c()
for (i in Nw:length(Train[,1])) {
SW<-Test[(i-Nw+1):i,]
RESPONSE<-"HIPERTANSIF"
SW<-cbind(SW,RESPONSE)
Data.model<-rbind(S0,SW)
rownames(Data.model)<-1:(N0+Nw)
Data.model<-Data.model[,-1]
fitControl <- trainControl(classProbs = T, method = "oob")
fit <- train(as.factor(RESPONSE) ~ .,
data = Data.model,
method="rf",
trainControl=fitControl)
Predict<-predict(fit, type='prob', OOB=TRUE)
#nTrees[i]<-fit$finalModel$ntree
p1[i]<-sum(Predict[(N0+1):(N0+Nw),2])/Nw
}
n = length(Predict[,2])/2
B = 10000
result = rep(NA, B)
for (i in 1:B) {
boot.sample = sample(n, replace = TRUE)
result[i] = quantile(p1[boot.sample],0.995,na.rm = T)
}
CL<-mean(result)
CL
S0<-sample_n(Train, length(Train[,1])) #bilinen ve normal(hipertansiyon olmayan) veriler
RESPONSE<-"NORMAL"
S0<-cbind(S0,RESPONSE)
N0<-length(S0[,1])
Nw<-4
p0<-c()
p1<-c()
SW<-c() #pencere icinde kalan veriler
Data.model<-c()
Predict<-c()
nTrees<-c()
for (i in Nw:length(Test[,1])) {
SW<-Test[(i-Nw+1):i,]
RESPONSE<-"HIPERTANSIF"
SW<-cbind(SW,RESPONSE)
Data.model<-rbind(S0,SW)
rownames(Data.model)<-1:(N0+Nw)
Data.model<-Data.model[,-1]
fitControl <- trainControl(classProbs = T, method = "oob")
fit <- train(as.factor(RESPONSE) ~ .,
data = Data.model,
method="rf",
trainControl=fitControl)
Predict<-predict(fit, type='prob', OOB=TRUE)
#nTrees[i]<-fit$finalModel$ntree
p1[i]<-sum(Predict[(N0+1):(N0+Nw),2])/Nw
}
sonuclar<-data.frame(p1, CL)
ggplot(sonuclar, aes(y=p1, x=1:length(sonuclar[,1])))+
geom_line()+
geom_hline(yintercept =CL)
View(Test)
View(Test)
library(ggplot2)
library(reshape)
Train.uret<-function(mu.SBP.gunduz,
sigma.SBP,
mu.DBP.gunduz,
sigma.DBP,
mu.SBP.gece,
mu.DBP.gece){
SBP<-c(scale(rnorm(44, mu.SBP.gunduz,sigma.SBP), center = mu.SBP.gunduz),
scale(rnorm(24, mu.SBP.gece,sigma.SBP), center = mu.SBP.gece),
scale(rnorm(12, mu.SBP.gunduz,sigma.SBP), center = mu.SBP.gunduz))
DBP<-c(scale(rnorm(44, mu.DBP.gunduz,sigma.DBP), center = mu.DBP.gunduz),
scale(rnorm(24, mu.DBP.gece,sigma.DBP), center = mu.DBP.gece),
scale(rnorm(12, mu.DBP.gunduz,sigma.DBP), center = mu.DBP.gunduz))
Zaman<-as.factor(c(rep(c("gunduz"), 44),
rep(c("gece"), 24),
rep(c("gunduz"), 12)))
Train<-data.frame(SBP,DBP, Zaman)
return(Train)
}
Train<-Train.uret(120, 5, 80, 5, 110, 70)
vesperal=NULL
mantinal=NULL
mu.SBP=120
sigma.SBP=5
mu.DBP=80
sigma.DBP=5
m=8
delta=20
SBP<-c(scale(rnorm(44, mean=mu.SBP, sigma.SBP), center=mu.SBP),  #gunduz
scale(rnorm(24, mean=100,5), center = 100),            #gece
scale(rnorm(12, mean=mu.SBP+delta, sigma.SBP),center = mu.SBP)) #gunduz
DBP<-c(scale(rnorm(44, mu.DBP,sigma.DBP), center = mu.DBP),            #gunduz
scale(rnorm(24, mean=70,5), center=70),                   #gece
scale(rnorm(12, mean=mu.DBP+delta, sigma.DBP),center = mu.DBP)) #gunduz           #gunduz
Zaman<-as.factor(c(rep(c("gunduz"), 44),
rep(c("gece"), 24),
rep(c("gunduz"), 12)))
Test<-data.frame(SBP,DBP, Zaman)
Test.grafik<-data.frame(Test, rep(c("Test"), length(Test[,1])), 1:length(Test[,1]))
names(Test.grafik)<-c("SBP", "DBP", "Gece/Gunduz", "Tip", "Zaman")
Train.grafik<-data.frame(Train, rep(c("Egitim"), length(Train[,1])), 1:length(Train[,1]))
names(Train.grafik)<-c("SBP", "DBP", "Gece/Gunduz", "Tip", "Zaman")
data<-rbind(Train.grafik,Test.grafik)
data<-data[,c(1,2,4,5)]
data_long <- melt(data, id=c("Zaman", "Tip"))
ggplot(data_long, aes(x=Zaman, y = value, color=variable))+
geom_line()+
ylab("Kan Basıncı")+
facet_wrap(~Tip)+
theme(legend.title = element_blank())
vesperal=NULL
mantinal=NULL
mu.SBP=120
sigma.SBP=5
mu.DBP=80
sigma.DBP=5
m=8
delta=20
SBP<-c(scale(rnorm(44, mean=mu.SBP, sigma.SBP), center=mu.SBP),  #gunduz
scale(rnorm(24, mean=100,5), center = 100),            #gece
scale(rnorm(12, mean=mu.SBP+delta, sigma.SBP),center = mu.SBP)) #gunduz
DBP<-c(scale(rnorm(44, mu.DBP,sigma.DBP), center = mu.DBP),            #gunduz
scale(rnorm(24, mean=70,5), center=70),                   #gece
scale(rnorm(12, mean=mu.DBP+delta, sigma.DBP),center = mu.DBP)) #gunduz           #gunduz
Zaman<-as.factor(c(rep(c("gunduz"), 44),
rep(c("gece"), 24),
rep(c("gunduz"), 12)))
Test<-data.frame(SBP,DBP, Zaman)
Test.grafik<-data.frame(Test, rep(c("Test"), length(Test[,1])), 1:length(Test[,1]))
names(Test.grafik)<-c("SBP", "DBP", "Gece/Gunduz", "Tip", "Zaman")
Train.grafik<-data.frame(Train, rep(c("Eğitim"), length(Train[,1])), 1:length(Train[,1]))
names(Train.grafik)<-c("SBP", "DBP", "Gece/Gunduz", "Tip", "Zaman")
data<-rbind(Train.grafik,Test.grafik)
data<-data[,c(1,2,4,5)]
data_long <- melt(data, id=c("Zaman", "Tip"))
ggplot(data_long, aes(x=Zaman, y = value, color=variable))+
geom_line()+
ylab("Kan Basıncı")+
facet_wrap(~Tip)+
theme(legend.title = element_blank())
########Control limits#############################
library(caret)
library(boot)
library(dplyr)
library(ggplot2)
library(MASS) #mvnrnd
library(pdp)
RTC.chart.limit<-function(Train, Train2, Nw){
S0<-sample_n(Train, length(Train[,1])) #bilinen ve normal(hipertansiyon olmayan) veriler
RESPONSE<-"NORMAL"
S0<-cbind(S0,RESPONSE)
N0<-length(S0[,1])
p0<-c()
p1<-c()
SW<-c() #pencere icinde kalan veriler
Data.model<-c()
Predict<-c()
nTrees<-c()
for (i in Nw:length(Train2[,1])) {
SW<-Train2[(i-Nw+1):i,]
RESPONSE<-"HIPERTANSIF"
SW<-cbind(SW,RESPONSE)
Data.model<-rbind(S0,SW)
rownames(Data.model)<-1:(N0+Nw)
#Data.model<-Data.model[,-1]
tgrid <- expand.grid(
.mtry = 2:3,
.splitrule = "gini",
.min.node.size = c(10, 20)
)
fit <- train(as.factor(RESPONSE) ~ .,
data = Data.model,
method="ranger",
num.trees = 100,
tuneGrid=  tgrid,
#preProcess=c("center", "scale"),
trControl = trainControl(method="cv", number = 3, verboseIter = T, classProbs = T))
Predict<-predict(fit, type='prob', OOB=TRUE)
p1[i]<-sum(Predict[(N0+1):(N0+Nw),2])/Nw
}
n = length(Predict[,2])/2
B = 10000
result = rep(NA, B)
for (i in 1:B) {
boot.sample = sample(n, replace = TRUE)
result[i] = quantile(p1[boot.sample],0.9973,na.rm = T)
}
return(result)
}
library(caret)
library(boot)
library(dplyr)
library(ggplot2)
library(MASS) #mvnrnd
library(pdp)
RTC.chart<-function(Train, Nw, Test, CL){
S0<-sample_n(Train, length(Train[,1])) #bilinen ve normal(hipertansiyon olmayan) veriler
RESPONSE<-"NORMAL"
S0<-cbind(S0,RESPONSE)
N0<-length(S0[,1])
p0<-c()
p1<-c()
SW<-c() #pencere icinde kalan veriler
Data.model<-c()
Predict<-c()
nTrees<-c()
Var.Imp<-matrix(0,length(Test[,1]),2)
for (i in Nw:length(Test[,1])) {
SW<-Test[(i-Nw+1):i,]
RESPONSE<-"HIPERTANSIF"
SW<-cbind(SW,RESPONSE)
Data.model<-rbind(S0,SW)
rownames(Data.model)<-1:(N0+Nw)
#Data.model<-Data.model[,-1]
fitControl <- trainControl(classProbs = T, method = "oob")
tgrid <- expand.grid(
.mtry = 2:3,
.splitrule = "gini",
.min.node.size = c(10, 20)
)
fit <- train(as.factor(RESPONSE) ~ .,
data = Data.model,
method="ranger",
num.trees = 100,
tuneGrid=  tgrid,
#preProcess=c("center", "scale"),
trControl = trainControl(method="cv", number = 3, verboseIter = T, classProbs = T),
importance = "permutation")
Var.Imp[1:Nw,1:2]<-NA
Var.Imp[i,1:2]<-varImp(fit)[[1]]$Overall[-1]
colnames(Var.Imp)<-c("DBP","SBP")
Predict<-predict(fit, type='prob', OOB=TRUE)
p1[i]<-sum(Predict[(N0+1):(N0+Nw),2])/Nw
if(p1[i]<CL){
Var.Imp[i,1]=NA
Var.Imp[i,2]=NA}
}
sonuclar<-data.frame(p1, CL, Var.Imp/400)
gg<-ggplot(sonuclar, aes(x=1:length(sonuclar[,1])))+
geom_point(aes(y=p1, colour="Tahmin"), size=1)+
geom_line(aes(y=p1, colour="Tahmin"),  size=1)+
geom_smooth(aes(y=p1))+
geom_line(aes(y=DBP, colour="DBP"), size=1)+
geom_line(aes(y=SBP, colour="SBP"), size=1)+
geom_line(aes(y=CL, colour="Kontrol.limiti"),  size=1)+
labs(x = "Zaman",
y = "Hipertansif olma olasiligi",
color = "Legend")+
scale_color_manual(name="",
values=c(Tahmin="black", DBP="blue", SBP="red", Kontrol.limiti="darkgrey"))
gg
}
#RTC kontrol limitleri
Train<-rbind(Train.uret(120, 5, 80, 5, 100, 70))
Train2<-rbind(Train.uret(120, 5, 80, 5, 100, 70))
Nw<-10
result<-RTC.chart.limit(Train, Train2, Nw)
result<-data.frame(result)
ggplot(result, aes(x=result)) + geom_density(alpha=.3)
CL<-median(result$result)
#RTC test
Train<-rbind(Train.uret(120, 5, 80, 5, 100, 70),
Train.uret(120, 5, 80, 5, 100, 70),
Train.uret(120, 5, 80, 5, 100, 70))
Test1<-rbind(Train.uret(120, 5, 80, 5, 100, 70), Test, Train.uret(120, 5, 80, 5, 100, 70))
Test.grafik<-data.frame(Test1, rep(c("Test"), length(Test1[,1])), 1:length(Test1[,1]))
names(Test.grafik)<-c("SBP", "DBP", "Gece/Gunduz", "Tip", "Zaman")
Train.grafik<-data.frame(Train, rep(c("Eğitim"), length(Train[,1])), 1:length(Train[,1]))
names(Train.grafik)<-c("SBP", "DBP", "Gece/Gunduz", "Tip", "Zaman")
data<-rbind(Train.grafik,Test.grafik)
data<-data[,c(1,2,4,5)]
data_long <- melt(data, id=c("Zaman", "Tip"))
ggplot(data_long, aes(x=Zaman, y = value, color=variable))+
geom_line()+
ylab("Kan Basıncı")+
facet_wrap(~Tip)+
theme(legend.title = element_blank())
RTC.chart(Train,Nw,Test1, CL)
mu.SBP=120
sigma.SBP=5
mu.DBP=80
sigma.DBP=5
delta=30
Train<-Train.uret(120, 5, 80, 5, 100, 70)
SBP<-c(scale(rnorm(44, mean=mu.SBP+delta, sigma.SBP), center=mu.SBP),  #gunduz
scale(rnorm(24, mean=100+delta,5), center = 100),            #gece
scale(rnorm(12, mean=mu.SBP+delta, sigma.SBP),center = mu.SBP)) #gunduz
DBP<-c(scale(rnorm(44, mu.DBP,sigma.DBP), center = mu.DBP),            #gunduz
scale(rnorm(24, mean=70,5), center=70),                   #gece
scale(rnorm(12, mu.DBP,sigma.DBP), center = mu.DBP))            #gunduz
Zaman<-as.factor(c(rep(c("gunduz"), 44),
rep(c("gece"), 24),
rep(c("gunduz"), 12)))
Test<-data.frame(SBP,DBP, Zaman)
Test.grafik<-data.frame(Test, rep(c("Test"), length(Test[,1])), 1:length(Test[,1]))
names(Test.grafik)<-c("SBP", "DBP", "Gece/Gunduz", "Tip", "Zaman")
Train.grafik<-data.frame(Train, rep(c("Eğitim"), length(Train[,1])), 1:length(Train[,1]))
names(Train.grafik)<-c("SBP", "DBP", "Gece/Gunduz", "Tip", "Zaman")
data<-rbind(Train.grafik,Test.grafik)
data<-data[,c(1,2,4,5)]
data_long <- melt(data, id=c("Zaman", "Tip"))
ggplot(data_long, aes(x=Zaman, y = value, color=variable))+
geom_line()+
ylab("Kan Basıncı")+
facet_wrap(~Tip)+
theme(legend.title = element_blank())
Train<-rbind(Train.uret(120, 5, 80, 5, 100, 70))
Train2<-rbind(Train.uret(120, 5, 80, 5, 100, 70))
Nw<-10
result<-RTC.chart.limit(Train, Train2, Nw)
result<-data.frame(result)
ggplot(result, aes(x=result)) + geom_density(alpha=.3)
CL<-median(result$result)
#RTC test
Train<-rbind(Train.uret(120, 5, 80, 5, 100, 70),
Train.uret(120, 5, 80, 5, 100, 70),
Train.uret(120, 5, 80, 5, 100, 70))
Test1<-rbind(Train.uret(120, 5, 80, 5, 100, 70), Test, Train.uret(120, 5, 80, 5, 100, 70))
Test.grafik<-data.frame(Test1, rep(c("Test"), length(Test1[,1])), 1:length(Test1[,1]))
names(Test.grafik)<-c("SBP", "DBP", "Gece/Gunduz", "Tip", "Zaman")
Train.grafik<-data.frame(Train, rep(c("Eğitim"), length(Train[,1])), 1:length(Train[,1]))
names(Train.grafik)<-c("SBP", "DBP", "Gece/Gunduz", "Tip", "Zaman")
data<-rbind(Train.grafik,Test.grafik)
data<-data[,c(1,2,4,5)]
data_long <- melt(data, id=c("Zaman", "Tip"))
ggplot(data_long, aes(x=Zaman, y = value, color=variable))+
geom_line()+
ylab("Kan Basıncı")+
facet_wrap(~Tip)+
theme(legend.title = element_blank())
RTC.chart(Train,Nw,Test1, CL)
########Gercek veriler###############################################################
library(readxl)
GerÃ§ek_Veriler <- read_excel("Dropbox/YL OGRENCILERI/2. HILMI FIDAN UZMANLIK ALAN/1. Tez/GerÃ§ek Veriler.xlsx")
